router id {{ bgp["bird"]["routerid"] }};

protocol kernel {
    scan time 60;
    import none;
}

protocol device {
    scan time 60;
}

protocol static static_bgp {
{% for name, vlan in fauscet_vlans | dictnumericsort %}
{% if 'gateway_v4' in vlan %}
    route {{ vlan["prefix_v4"] | ipv4("network/prefix") }} unreachable;
{% endif %}
{% endfor %}
}

{% for peer in bgp["bird"]["peers"] %}
{% if peer["neighbor"]["ipv4"] is defined %}
protocol bgp {{ peer["name"] | replace('-', '_') }} {
    local as {{ peer["local_as"] }};
    neighbor {{ peer["neighbor"]["ipv4"]["ip"] | ipv4('address') }} port {{ peer["neighbor"]["ipv4"]["port"] }} as {{ peer["neighbor_as"] }};
{% if peer["prefix_limit"] is defined %}
    export limit {{ peer["prefix_limit"] }} action block;
{% endif %}
{% if peer["name"] == "faucet" %}
    export filter {
        if proto = "static_bgp" then reject;
        else accept;
    };
    import all;
    rr client;
{% else %}
    export filter {
        if proto = "faucet" || proto = "static_bgp" then {
            bgp_next_hop = {{ peer["faucet_ip"]["ipv4"]["ip"] | ipv4("address") }};
            accept;
        }
    };
    import filter {
        if net = 0.0.0.0/0 then accept;
        else reject;
    };
    direct;
{% endif %}
}
{% if loop.index != loop.length %}

{% endif %}
{% endif %}
{% endfor %}
